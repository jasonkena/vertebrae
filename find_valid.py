import numpy as np

categories = [
    "adrenal_gland_left",
    "adrenal_gland_right",
    "aorta",
    "autochthon_left",
    "autochthon_right",
    "brain",
    "clavicula_left",
    "clavicula_right",
    "colon",
    "duodenum",
    "esophagus",
    "face",
    "femur_left",
    "femur_right",
    "gallbladder",
    "gluteus_maximus_left",
    "gluteus_maximus_right",
    "gluteus_medius_left",
    "gluteus_medius_right",
    "gluteus_minimus_left",
    "gluteus_minimus_right",
    "heart_atrium_left",
    "heart_atrium_right",
    "heart_myocardium",
    "heart_ventricle_left",
    "heart_ventricle_right",
    "hip_left",
    "hip_right",
    "humerus_left",
    "humerus_right",
    "iliac_artery_left",
    "iliac_artery_right",
    "iliac_vena_left",
    "iliac_vena_right",
    "iliopsoas_left",
    "iliopsoas_right",
    "inferior_vena_cava",
    "kidney_left",
    "kidney_right",
    "liver",
    "lung_lower_lobe_left",
    "lung_lower_lobe_right",
    "lung_middle_lobe_right",
    "lung_upper_lobe_left",
    "lung_upper_lobe_right",
    "pancreas",
    "portal_vein_and_splenic_vein",
    "pulmonary_artery",
    "rib_left_1",
    "rib_left_10",
    "rib_left_11",
    "rib_left_12",
    "rib_left_2",
    "rib_left_3",
    "rib_left_4",
    "rib_left_5",
    "rib_left_6",
    "rib_left_7",
    "rib_left_8",
    "rib_left_9",
    "rib_right_1",
    "rib_right_10",
    "rib_right_11",
    "rib_right_12",
    "rib_right_2",
    "rib_right_3",
    "rib_right_4",
    "rib_right_5",
    "rib_right_6",
    "rib_right_7",
    "rib_right_8",
    "rib_right_9",
    "sacrum",
    "scapula_left",
    "scapula_right",
    "small_bowel",
    "spleen",
    "stomach",
    "trachea",
    "urinary_bladder",
    "vertebrae_C1",
    "vertebrae_C2",
    "vertebrae_C3",
    "vertebrae_C4",
    "vertebrae_C5",
    "vertebrae_C6",
    "vertebrae_C7",
    "vertebrae_L1",
    "vertebrae_L2",
    "vertebrae_L3",
    "vertebrae_L4",
    "vertebrae_L5",
    "vertebrae_T1",
    "vertebrae_T10",
    "vertebrae_T11",
    "vertebrae_T12",
    "vertebrae_T2",
    "vertebrae_T3",
    "vertebrae_T4",
    "vertebrae_T5",
    "vertebrae_T6",
    "vertebrae_T7",
    "vertebrae_T8",
    "vertebrae_T9",
]

vertebrae_idx = np.array(
    [i for i in range(len(categories)) if "vertebrae" in categories[i]]
)

# generated by /data/adhinart/bonnet/histogram.py
results = np.load("/data/adhinart/bonnet/results.npy", allow_pickle=True).item()

valid = []
for key in results:
    counts = np.array(results[key][0])
    if np.all(counts[vertebrae_idx] >= 100):
        valid.append(key)
print(valid)
# ['/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s0224', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s0332', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s0467', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s0511', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s0585', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s0591', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s0616', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s0624', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s0636', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s0690', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s0727', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s0751', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s0754', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s0763', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s0777', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s0790', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s0812', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s0923', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s0933', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s0970', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s0986', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s1029', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s1045', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s1082', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s1088', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s1089', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s1123', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s1124', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s1152', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s1159', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s1161', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s1171', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s1206', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s1249', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s1304', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s1314', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s1321', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s1350', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s1369', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s1372', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s1380', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s1384', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s1388', '/mmfs1/data/adhinart/bonnet/Totalsegmentator_dataset/s1397']
